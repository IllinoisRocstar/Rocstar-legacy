!* *******************************************************************
! * Illinois Open Source License                                      *
! *                                                                   *
! * University of Illinois/NCSA                                       * 
! * Open Source License                                               *
! *                                                                   *
! * Copyright@2008, University of Illinois.  All rights reserved.     *
! *                                                                   *
! *  Developed by:                                                    *
! *                                                                   *
! *     Center for Simulation of Advanced Rockets                     *
! *                                                                   *
! *     University of Illinois                                        *
! *                                                                   *
! *     www.csar.uiuc.edu                                             *
! *                                                                   *
! * Permission is hereby granted, free of charge, to any person       *
! * obtaining a copy of this software and associated documentation    *
! * files (the "Software"), to deal with the Software without         *
! * restriction, including without limitation the rights to use,      *
! * copy, modify, merge, publish, distribute, sublicense, and/or      *
! * sell copies of the Software, and to permit persons to whom the    *
! * Software is furnished to do so, subject to the following          *
! * conditions:                                                       *
! *                                                                   *
! *                                                                   *
! * @ Redistributions of source code must retain the above copyright  * 
! *   notice, this list of conditions and the following disclaimers.  *
! *                                                                   * 
! * @ Redistributions in binary form must reproduce the above         *
! *   copyright notice, this list of conditions and the following     *
! *   disclaimers in the documentation and/or other materials         *
! *   provided with the distribution.                                 *
! *                                                                   *
! * @ Neither the names of the Center for Simulation of Advanced      *
! *   Rockets, the University of Illinois, nor the names of its       *
! *   contributors may be used to endorse or promote products derived * 
! *   from this Software without specific prior written permission.   *
! *                                                                   *
! * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   *
! * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   *
! * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          *
! * NONINFRINGEMENT.  IN NO EVENT SHALL THE CONTRIBUTORS OR           *
! * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER       * 
! * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,   *
! * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE    *
! * USE OR OTHER DEALINGS WITH THE SOFTWARE.                          *
! *********************************************************************
 
! $Id: roccomf90.h,v 1.34 2008/11/19 22:16:40 mtcampbe Exp $

! Roccom types
      INTEGER COM_CHARACTER, COM_LOGICAL, COM_INTEGER, COM_REAL, COM_DOUBLE
      INTEGER COM_DOUBLE_PRECISION, COM_COMPLEX, COM_DOUBLE_COMPLEX
      INTEGER COM_MPI_COMM, COM_MPI_COMMF
      PARAMETER (COM_CHARACTER=13, COM_LOGICAL=14, COM_INTEGER=15)
      PARAMETER (COM_REAL=16, COM_DOUBLE=17, COM_DOUBLE_PRECISION=17)
      PARAMETER (COM_COMPLEX=18,COM_DOUBLE_COMPLEX=19)
      PARAMETER (COM_MPI_COMM=21,COM_MPI_COMMF=21)

      INTEGER COM_RAWDATA, COM_METADATA, COM_STRING
      INTEGER COM_VOID, COM_F90POINTER, COM_POINTER
      PARAMETER (COM_STRING=-1, COM_RAWDATA=-2, COM_METADATA=-3, &
           COM_VOID=-4, COM_F90POINTER=-5, COM_POINTER=-5)
      
      EXTERNAL COM_CALL_FUNCTION
      EXTERNAL COM_ICALL_FUNCTION

      INTERFACE
         SUBROUTINE COM_INIT
         END SUBROUTINE COM_INIT

         SUBROUTINE COM_FINALIZE
         END SUBROUTINE COM_FINALIZE

         FUNCTION COM_INITIALIZED()
           INTEGER :: COM_INITIALIZED
         END FUNCTION COM_INITIALIZED

         SUBROUTINE COM_ABORT( IERR)
           INTEGER, INTENT(IN) :: IERR
         END SUBROUTINE COM_ABORT

         SUBROUTINE COM_SET_DEFAULT_COMMUNICATOR( comm)
           INTEGER, INTENT(IN) :: comm
         END SUBROUTINE COM_SET_DEFAULT_COMMUNICATOR

         FUNCTION COM_GET_DEFAULT_COMMUNICATOR()
           INTEGER :: COM_GET_DEFAULT_COMMUNICATOR
         END FUNCTION COM_GET_DEFAULT_COMMUNICATOR

         SUBROUTINE COM_LOAD_MODULE( MNAME, WNAME)
           CHARACTER(*), INTENT(IN) :: MNAME, WNAME
         END SUBROUTINE COM_LOAD_MODULE

         SUBROUTINE COM_DELETE_WINDOW( W_NAME)
           CHARACTER(*), INTENT(IN) :: W_NAME
         END SUBROUTINE COM_DELETE_WINDOW
         
         SUBROUTINE COM_DELETE_PANE( W_NAME, PID)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
         END SUBROUTINE COM_DELETE_PANE

         SUBROUTINE COM_NEW_ATTRIBUTE( WA_NAME, LOC, TYPE, SIZE, UNIT)
           CHARACTER(*), INTENT(IN) :: WA_NAME, LOC, UNIT
           INTEGER, INTENT(IN)      :: TYPE, SIZE
         END SUBROUTINE COM_NEW_ATTRIBUTE

         SUBROUTINE COM_DELETE_ATTRIBUTE( WA_NAME)
           CHARACTER(*), INTENT(IN) :: WA_NAME
         END SUBROUTINE COM_DELETE_ATTRIBUTE

         SUBROUTINE COM_SET_EXTERNAL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           EXTERNAL PTR
         END SUBROUTINE COM_SET_EXTERNAL

         SUBROUTINE COM_SET_EXTERNAL_CONST( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           EXTERNAL PTR
         END SUBROUTINE COM_SET_EXTERNAL_CONST

         SUBROUTINE COM_CHECK_BOUNDS( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           EXTERNAL PTR
         END SUBROUTINE COM_CHECK_BOUNDS

         FUNCTION COM_CALL_SYSTEM( COMMAND)
           CHARACTER(*), INTENT(IN) :: COMMAND
           INTEGER :: COM_CALL_SYSTEM
         END FUNCTION COM_CALL_SYSTEM

         SUBROUTINE COM_CALL_EXIT( IERR)
           INTEGER, INTENT(IN) :: IERR
         END SUBROUTINE COM_CALL_EXIT

         SUBROUTINE COM_CALL_ATEXIT( FUNC)
           EXTERNAL FUNC
         END SUBROUTINE COM_CALL_ATEXIT

      END INTERFACE

      INTERFACE COM_WINDOW_INIT_DONE
         SUBROUTINE COM_WINDOW_INIT_DONE_1ARG( W_NAME)
           CHARACTER(*), INTENT(IN) :: W_NAME
         END SUBROUTINE COM_WINDOW_INIT_DONE_1ARG

         SUBROUTINE COM_WINDOW_INIT_DONE_2ARG( W_NAME, PNCHANGED)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN)      :: PNCHANGED
         END SUBROUTINE COM_WINDOW_INIT_DONE_2ARG
      END INTERFACE

      INTERFACE COM_UNLOAD_MODULE
         SUBROUTINE COM_UNLOAD_MODULE_1( MNAME)
           CHARACTER(*), INTENT(IN) :: MNAME
         END SUBROUTINE COM_UNLOAD_MODULE_1

         SUBROUTINE COM_UNLOAD_MODULE_2( MNAME, WNAME)
           CHARACTER(*), INTENT(IN) :: MNAME, WNAME
         END SUBROUTINE COM_UNLOAD_MODULE_2
      END INTERFACE

      INTERFACE COM_NEW_WINDOW
         SUBROUTINE COM_NEW_WINDOW_NULL( W_NAME)
           CHARACTER(*), INTENT(IN) :: W_NAME
         END SUBROUTINE COM_NEW_WINDOW_NULL

         SUBROUTINE COM_NEW_WINDOW_MPI( W_NAME, COMM)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN)      :: COMM
         END SUBROUTINE COM_NEW_WINDOW_MPI
      END INTERFACE

      INTERFACE COM_SET_SIZE
         SUBROUTINE COM_SET_SIZE1( ANAME, PANE_ID, SIZE_TOTAL)
           CHARACTER(*), INTENT( IN) :: ANAME
           INTEGER, INTENT(IN)       :: PANE_ID, SIZE_TOTAL
         END SUBROUTINE COM_SET_SIZE1

         SUBROUTINE COM_SET_SIZE2( ANAME, PANE_ID, SIZE_TOTAL, SIZE_GHOST)
           CHARACTER(*), INTENT( IN) :: ANAME
           INTEGER, INTENT(IN)       :: PANE_ID, SIZE_TOTAL, SIZE_GHOST
         END SUBROUTINE COM_SET_SIZE2
      END INTERFACE

      INTERFACE COM_SET_ARRAY
         SUBROUTINE COM_SET_ARRAY_NULL( W_NAME, PID)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
         END SUBROUTINE COM_SET_ARRAY_NULL

         SUBROUTINE COM_SET_ARRAY_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CHR

         SUBROUTINE COM_SET_ARRAY_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_INT

         SUBROUTINE COM_SET_ARRAY_INT_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_INT_STRD
         
         SUBROUTINE COM_SET_ARRAY_INT_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_INT_DYN

         SUBROUTINE COM_SET_ARRAY_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_INT1D

         SUBROUTINE COM_SET_ARRAY_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_INT1D_STRD
         
         SUBROUTINE COM_SET_ARRAY_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_INT1D_DYN

         SUBROUTINE COM_SET_ARRAY_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_INT2D

         SUBROUTINE COM_SET_ARRAY_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_INT2D_STRD
         
         SUBROUTINE COM_SET_ARRAY_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_INT2D_DYN

         SUBROUTINE COM_SET_ARRAY_INT3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_INT3D

         SUBROUTINE COM_SET_ARRAY_INT3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_INT3D_STRD
         
         SUBROUTINE COM_SET_ARRAY_INT3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_INT3D_DYN
         
         SUBROUTINE COM_SET_ARRAY_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_FLT

         SUBROUTINE COM_SET_ARRAY_FLT_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_FLT_STRD

         SUBROUTINE COM_SET_ARRAY_FLT_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_FLT_DYN

         SUBROUTINE COM_SET_ARRAY_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_FLT1D

         SUBROUTINE COM_SET_ARRAY_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_FLT1D_STRD

         SUBROUTINE COM_SET_ARRAY_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_FLT1D_DYN

         SUBROUTINE COM_SET_ARRAY_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_FLT2D

         SUBROUTINE COM_SET_ARRAY_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_FLT2D_STRD

         SUBROUTINE COM_SET_ARRAY_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_FLT2D_DYN

         SUBROUTINE COM_SET_ARRAY_FLT3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_FLT3D

         SUBROUTINE COM_SET_ARRAY_FLT3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_FLT3D_STRD

         SUBROUTINE COM_SET_ARRAY_FLT3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_FLT3D_DYN

         SUBROUTINE COM_SET_ARRAY_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_DBL

         SUBROUTINE COM_SET_ARRAY_DBL_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_DBL_STRD

         SUBROUTINE COM_SET_ARRAY_DBL_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_DBL_DYN

         SUBROUTINE COM_SET_ARRAY_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_DBL1D

         SUBROUTINE COM_SET_ARRAY_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_DBL1D_STRD

         SUBROUTINE COM_SET_ARRAY_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_DBL1D_DYN

         SUBROUTINE COM_SET_ARRAY_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_DBL2D

         SUBROUTINE COM_SET_ARRAY_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_DBL2D_STRD

         SUBROUTINE COM_SET_ARRAY_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_DBL2D_DYN

         SUBROUTINE COM_SET_ARRAY_DBL3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_DBL3D

         SUBROUTINE COM_SET_ARRAY_DBL3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_DBL3D_STRD

         SUBROUTINE COM_SET_ARRAY_DBL3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_DBL3D_DYN
      END INTERFACE

      INTERFACE COM_SET_ARRAY_CONST
         SUBROUTINE COM_SET_ARRAY_CONST_NULL( W_NAME, PID)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
         END SUBROUTINE COM_SET_ARRAY_CONST_NULL

         SUBROUTINE COM_SET_ARRAY_CONST_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), INTENT(IN) :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_CHR

         SUBROUTINE COM_SET_ARRAY_CONST_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_INT

         SUBROUTINE COM_SET_ARRAY_CONST_INT_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_INT_STRD
         
         SUBROUTINE COM_SET_ARRAY_CONST_INT_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_INT_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT1D

         SUBROUTINE COM_SET_ARRAY_CONST_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT1D_STRD
         
         SUBROUTINE COM_SET_ARRAY_CONST_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT1D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT2D

         SUBROUTINE COM_SET_ARRAY_CONST_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT2D_STRD
         
         SUBROUTINE COM_SET_ARRAY_CONST_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT2D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_INT3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT3D

         SUBROUTINE COM_SET_ARRAY_CONST_INT3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT3D_STRD
         
         SUBROUTINE COM_SET_ARRAY_CONST_INT3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_INT3D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT

         SUBROUTINE COM_SET_ARRAY_CONST_FLT_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_FLT_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, TARGET :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT1D

         SUBROUTINE COM_SET_ARRAY_CONST_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT1D_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT1D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT2D

         SUBROUTINE COM_SET_ARRAY_CONST_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT2D_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT2D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_FLT3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT3D

         SUBROUTINE COM_SET_ARRAY_CONST_FLT3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT3D_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_FLT3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_FLT3D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL

         SUBROUTINE COM_SET_ARRAY_CONST_DBL_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_DBL_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION :: PTR
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL1D

         SUBROUTINE COM_SET_ARRAY_CONST_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL1D_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL1D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL2D

         SUBROUTINE COM_SET_ARRAY_CONST_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL2D_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL2D_DYN

         SUBROUTINE COM_SET_ARRAY_CONST_DBL3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL3D

         SUBROUTINE COM_SET_ARRAY_CONST_DBL3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL3D_STRD

         SUBROUTINE COM_SET_ARRAY_CONST_DBL3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_SET_ARRAY_CONST_DBL3D_DYN
      END INTERFACE

      INTERFACE COM_APPEND_ARRAY
         SUBROUTINE COM_APPEND_ARRAY_CHR( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           CHARACTER :: PTR
         END SUBROUTINE COM_APPEND_ARRAY_CHR

         SUBROUTINE COM_APPEND_ARRAY_INT( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER :: PTR
         END SUBROUTINE COM_APPEND_ARRAY_INT

         SUBROUTINE COM_APPEND_ARRAY_INT1D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_APPEND_ARRAY_INT1D

         SUBROUTINE COM_APPEND_ARRAY_INT2D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_APPEND_ARRAY_INT2D

         SUBROUTINE COM_APPEND_ARRAY_INT3D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_APPEND_ARRAY_INT3D

         SUBROUTINE COM_APPEND_ARRAY_FLT( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL :: PTR
         END SUBROUTINE COM_APPEND_ARRAY_FLT

         SUBROUTINE COM_APPEND_ARRAY_FLT1D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_APPEND_ARRAY_FLT1D

         SUBROUTINE COM_APPEND_ARRAY_FLT2D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_APPEND_ARRAY_FLT2D

         SUBROUTINE COM_APPEND_ARRAY_FLT3D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_APPEND_ARRAY_FLT3D

         SUBROUTINE COM_APPEND_ARRAY_DBL( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION :: PTR
         END SUBROUTINE COM_APPEND_ARRAY_DBL

         SUBROUTINE COM_APPEND_ARRAY_DBL1D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_APPEND_ARRAY_DBL1D

         SUBROUTINE COM_APPEND_ARRAY_DBL2D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_APPEND_ARRAY_DBL2D

         SUBROUTINE COM_APPEND_ARRAY_DBL3D( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_APPEND_ARRAY_DBL3D
      END INTERFACE

      INTERFACE COM_SET_BOUNDS
         SUBROUTINE COM_SET_BOUNDS_INT( WNAME, PANE_ID, LBND, UBND)
           CHARACTER(*), INTENT(IN) :: WNAME
           INTEGER, INTENT(IN)      :: PANE_ID
           INTEGER, INTENT(IN)      :: LBND, UBND
         END SUBROUTINE COM_SET_BOUNDS_INT
         
         SUBROUTINE COM_SET_BOUNDS_FLT( WNAME, PANE_ID, LBND, UBND)
           CHARACTER(*), INTENT(IN) :: WNAME
           INTEGER, INTENT(IN)      :: PANE_ID
           REAL, INTENT(IN)         :: LBND, UBND
         END SUBROUTINE COM_SET_BOUNDS_FLT
         
         SUBROUTINE COM_SET_BOUNDS_DBL( WNAME, PANE_ID, LBND, UBND)
           CHARACTER(*), INTENT(IN)      :: WNAME
           INTEGER, INTENT(IN)      :: PANE_ID
           DOUBLE PRECISION, INTENT(IN)  :: LBND, UBND
         END SUBROUTINE COM_SET_BOUNDS_DBL
      END INTERFACE

      INTERFACE COM_ALLOCATE_ARRAY
         SUBROUTINE COM_ALLOC_ARRAY_WIN( W_NAME)
           CHARACTER(*), INTENT(IN) :: W_NAME
         END SUBROUTINE COM_ALLOC_ARRAY_WIN

         SUBROUTINE COM_ALLOC_ARRAY_PANE( W_NAME, PID)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
         END SUBROUTINE COM_ALLOC_ARRAY_PANE

         SUBROUTINE COM_ALLOC_ARRAY_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), POINTER :: PTR
         END SUBROUTINE COM_ALLOC_ARRAY_CHR

         SUBROUTINE COM_ALLOC_ARRAY_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR
         END SUBROUTINE COM_ALLOC_ARRAY_INT

         SUBROUTINE COM_ALLOC_ARRAY_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_INT1D

         SUBROUTINE COM_ALLOC_ARRAY_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_INT1D_STRD
         
         SUBROUTINE COM_ALLOC_ARRAY_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_INT1D_DYN

         SUBROUTINE COM_ALLOC_ARRAY_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_INT2D

         SUBROUTINE COM_ALLOC_ARRAY_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_INT2D_STRD
         
         SUBROUTINE COM_ALLOC_ARRAY_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_INT2D_DYN

         SUBROUTINE COM_ALLOC_ARRAY_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR
         END SUBROUTINE COM_ALLOC_ARRAY_FLT

         SUBROUTINE COM_ALLOC_ARRAY_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_FLT1D

         SUBROUTINE COM_ALLOC_ARRAY_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_FLT1D_STRD

         SUBROUTINE COM_ALLOC_ARRAY_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_FLT1D_DYN

         SUBROUTINE COM_ALLOC_ARRAY_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_FLT2D

         SUBROUTINE COM_ALLOC_ARRAY_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_FLT2D_STRD

         SUBROUTINE COM_ALLOC_ARRAY_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_FLT2D_DYN

         SUBROUTINE COM_ALLOC_ARRAY_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR
         END SUBROUTINE COM_ALLOC_ARRAY_DBL

         SUBROUTINE COM_ALLOC_ARRAY_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_DBL1D

         SUBROUTINE COM_ALLOC_ARRAY_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_DBL1D_STRD

         SUBROUTINE COM_ALLOC_ARRAY_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_ALLOC_ARRAY_DBL1D_DYN

         SUBROUTINE COM_ALLOC_ARRAY_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_DBL2D

         SUBROUTINE COM_ALLOC_ARRAY_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_DBL2D_STRD

         SUBROUTINE COM_ALLOC_ARRAY_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_ALLOC_ARRAY_DBL2D_DYN

      END INTERFACE

      INTERFACE COM_RESIZE_ARRAY
         SUBROUTINE COM_RESIZE_ARRAY_WIN( W_NAME)
           CHARACTER(*), INTENT(IN) :: W_NAME
         END SUBROUTINE COM_RESIZE_ARRAY_WIN

         SUBROUTINE COM_RESIZE_ARRAY_PANE( W_NAME, PID)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
         END SUBROUTINE COM_RESIZE_ARRAY_PANE

         SUBROUTINE COM_RESIZE_ARRAY_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), POINTER :: PTR
         END SUBROUTINE COM_RESIZE_ARRAY_CHR

         SUBROUTINE COM_RESIZE_ARRAY_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR
         END SUBROUTINE COM_RESIZE_ARRAY_INT

         SUBROUTINE COM_RESIZE_ARRAY_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_INT1D

         SUBROUTINE COM_RESIZE_ARRAY_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_INT1D_STRD
         
         SUBROUTINE COM_RESIZE_ARRAY_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_INT1D_DYN

         SUBROUTINE COM_RESIZE_ARRAY_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_INT2D

         SUBROUTINE COM_RESIZE_ARRAY_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_INT2D_STRD
         
         SUBROUTINE COM_RESIZE_ARRAY_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, CAP, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_INT2D_DYN

         SUBROUTINE COM_RESIZE_ARRAY_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR
         END SUBROUTINE COM_RESIZE_ARRAY_FLT

         SUBROUTINE COM_RESIZE_ARRAY_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_FLT1D

         SUBROUTINE COM_RESIZE_ARRAY_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_FLT1D_STRD

         SUBROUTINE COM_RESIZE_ARRAY_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_FLT1D_DYN

         SUBROUTINE COM_RESIZE_ARRAY_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_FLT2D

         SUBROUTINE COM_RESIZE_ARRAY_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_FLT2D_STRD

         SUBROUTINE COM_RESIZE_ARRAY_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_FLT2D_DYN

         SUBROUTINE COM_RESIZE_ARRAY_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR
         END SUBROUTINE COM_RESIZE_ARRAY_DBL

         SUBROUTINE COM_RESIZE_ARRAY_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_DBL1D

         SUBROUTINE COM_RESIZE_ARRAY_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_DBL1D_STRD

         SUBROUTINE COM_RESIZE_ARRAY_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_RESIZE_ARRAY_DBL1D_DYN

         SUBROUTINE COM_RESIZE_ARRAY_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_DBL2D

         SUBROUTINE COM_RESIZE_ARRAY_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_DBL2D_STRD

         SUBROUTINE COM_RESIZE_ARRAY_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_RESIZE_ARRAY_DBL2D_DYN

      END INTERFACE

      INTERFACE COM_GET_ARRAY
         SUBROUTINE COM_GET_ARRAY_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_CHR

         SUBROUTINE COM_GET_ARRAY_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_INT

         SUBROUTINE COM_GET_ARRAY_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_INT1D

         SUBROUTINE COM_GET_ARRAY_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_INT1D_STRD
         
         SUBROUTINE COM_GET_ARRAY_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_INT1D_DYN

         SUBROUTINE COM_GET_ARRAY_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_INT2D

         SUBROUTINE COM_GET_ARRAY_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_INT2D_STRD
         
         SUBROUTINE COM_GET_ARRAY_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_INT2D_DYN

         SUBROUTINE COM_GET_ARRAY_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_FLT

         SUBROUTINE COM_GET_ARRAY_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_FLT1D

         SUBROUTINE COM_GET_ARRAY_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_FLT1D_STRD

         SUBROUTINE COM_GET_ARRAY_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_FLT1D_DYN

         SUBROUTINE COM_GET_ARRAY_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_FLT2D

         SUBROUTINE COM_GET_ARRAY_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_FLT2D_STRD

         SUBROUTINE COM_GET_ARRAY_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_FLT2D_DYN

         SUBROUTINE COM_GET_ARRAY_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_DBL

         SUBROUTINE COM_GET_ARRAY_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_DBL1D

         SUBROUTINE COM_GET_ARRAY_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_DBL1D_STRD

         SUBROUTINE COM_GET_ARRAY_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_DBL1D_DYN

         SUBROUTINE COM_GET_ARRAY_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_DBL2D

         SUBROUTINE COM_GET_ARRAY_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_DBL2D_STRD

         SUBROUTINE COM_GET_ARRAY_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_DBL2D_DYN

      END INTERFACE

      INTERFACE COM_GET_ARRAY_CONST
         SUBROUTINE COM_GET_ARRAY_CONST_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_CONST_CHR

         SUBROUTINE COM_GET_ARRAY_CONST_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_CONST_INT

         SUBROUTINE COM_GET_ARRAY_CONST_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_INT1D

         SUBROUTINE COM_GET_ARRAY_CONST_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_INT1D_STRD
         
         SUBROUTINE COM_GET_ARRAY_CONST_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_INT1D_DYN

         SUBROUTINE COM_GET_ARRAY_CONST_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_INT2D

         SUBROUTINE COM_GET_ARRAY_CONST_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_INT2D_STRD
         
         SUBROUTINE COM_GET_ARRAY_CONST_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_INT2D_DYN

         SUBROUTINE COM_GET_ARRAY_CONST_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT

         SUBROUTINE COM_GET_ARRAY_CONST_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT1D

         SUBROUTINE COM_GET_ARRAY_CONST_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT1D_STRD

         SUBROUTINE COM_GET_ARRAY_CONST_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT1D_DYN

         SUBROUTINE COM_GET_ARRAY_CONST_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT2D

         SUBROUTINE COM_GET_ARRAY_CONST_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT2D_STRD

         SUBROUTINE COM_GET_ARRAY_CONST_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_FLT2D_DYN

         SUBROUTINE COM_GET_ARRAY_CONST_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL

         SUBROUTINE COM_GET_ARRAY_CONST_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL1D

         SUBROUTINE COM_GET_ARRAY_CONST_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL1D_STRD

         SUBROUTINE COM_GET_ARRAY_CONST_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL1D_DYN

         SUBROUTINE COM_GET_ARRAY_CONST_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL2D

         SUBROUTINE COM_GET_ARRAY_CONST_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL2D_STRD

         SUBROUTINE COM_GET_ARRAY_CONST_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, INTENT(OUT) :: STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_GET_ARRAY_CONST_DBL2D_DYN

      END INTERFACE

      INTERFACE COM_COPY_ARRAY
         SUBROUTINE COM_COPY_ARRAY_CHR( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           CHARACTER(*), POINTER :: PTR
         END SUBROUTINE COM_COPY_ARRAY_CHR

         SUBROUTINE COM_COPY_ARRAY_INT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER :: PTR
         END SUBROUTINE COM_COPY_ARRAY_INT

         SUBROUTINE COM_COPY_ARRAY_INT_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_INT_STRD
         
         SUBROUTINE COM_COPY_ARRAY_INT_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_INT_DYN

         SUBROUTINE COM_COPY_ARRAY_INT_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           INTEGER, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_INT_OFF

         SUBROUTINE COM_COPY_ARRAY_INT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_INT1D

         SUBROUTINE COM_COPY_ARRAY_INT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_INT1D_STRD
         
         SUBROUTINE COM_COPY_ARRAY_INT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_INT1D_DYN

         SUBROUTINE COM_COPY_ARRAY_INT1D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           INTEGER, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_INT1D_OFF

         SUBROUTINE COM_COPY_ARRAY_INT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT2D

         SUBROUTINE COM_COPY_ARRAY_INT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT2D_STRD
         
         SUBROUTINE COM_COPY_ARRAY_INT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT2D_DYN

         SUBROUTINE COM_COPY_ARRAY_INT2D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           INTEGER, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT2D_OFF

         SUBROUTINE COM_COPY_ARRAY_INT3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT3D

         SUBROUTINE COM_COPY_ARRAY_INT3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT3D_STRD
         
         SUBROUTINE COM_COPY_ARRAY_INT3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT3D_DYN

         SUBROUTINE COM_COPY_ARRAY_INT3D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           INTEGER, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_INT3D_OFF
         
         SUBROUTINE COM_COPY_ARRAY_FLT( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_FLT

         SUBROUTINE COM_COPY_ARRAY_FLT_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_FLT_STRD
         
         SUBROUTINE COM_COPY_ARRAY_FLT_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_FLT_DYN

         SUBROUTINE COM_COPY_ARRAY_FLT_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           REAL, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_FLT_OFF

         SUBROUTINE COM_COPY_ARRAY_FLT1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_FLT1D

         SUBROUTINE COM_COPY_ARRAY_FLT1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_FLT1D_STRD

         SUBROUTINE COM_COPY_ARRAY_FLT1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_FLT1D_DYN

         SUBROUTINE COM_COPY_ARRAY_FLT1D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           REAL, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_FLT1D_OFF

         SUBROUTINE COM_COPY_ARRAY_FLT2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT2D

         SUBROUTINE COM_COPY_ARRAY_FLT2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT2D_STRD

         SUBROUTINE COM_COPY_ARRAY_FLT2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT2D_DYN

         SUBROUTINE COM_COPY_ARRAY_FLT2D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           REAL, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT2D_OFF

         SUBROUTINE COM_COPY_ARRAY_FLT3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT3D

         SUBROUTINE COM_COPY_ARRAY_FLT3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT3D_STRD

         SUBROUTINE COM_COPY_ARRAY_FLT3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT3D_DYN

         SUBROUTINE COM_COPY_ARRAY_FLT3D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           REAL, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_FLT3D_OFF

         SUBROUTINE COM_COPY_ARRAY_DBL( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_DBL

         SUBROUTINE COM_COPY_ARRAY_DBL_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_DBL_STRD
         
         SUBROUTINE COM_COPY_ARRAY_DBL_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_DBL_DYN

         SUBROUTINE COM_COPY_ARRAY_DBL_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           DOUBLE PRECISION, INTENT(OUT) :: PTR
         END SUBROUTINE COM_COPY_ARRAY_DBL_OFF

         SUBROUTINE COM_COPY_ARRAY_DBL1D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_DBL1D

         SUBROUTINE COM_COPY_ARRAY_DBL1D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_DBL1D_STRD

         SUBROUTINE COM_COPY_ARRAY_DBL1D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_DBL1D_DYN

         SUBROUTINE COM_COPY_ARRAY_DBL1D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           DOUBLE PRECISION, POINTER :: PTR(:)
         END SUBROUTINE COM_COPY_ARRAY_DBL1D_OFF

         SUBROUTINE COM_COPY_ARRAY_DBL2D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL2D

         SUBROUTINE COM_COPY_ARRAY_DBL2D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL2D_STRD

         SUBROUTINE COM_COPY_ARRAY_DBL2D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL2D_DYN

         SUBROUTINE COM_COPY_ARRAY_DBL2D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           DOUBLE PRECISION, POINTER :: PTR(:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL2D_OFF

         SUBROUTINE COM_COPY_ARRAY_DBL3D( W_NAME, PID, PTR)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL3D

         SUBROUTINE COM_COPY_ARRAY_DBL3D_STRD( W_NAME, PID, PTR, STRD)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL3D_STRD

         SUBROUTINE COM_COPY_ARRAY_DBL3D_DYN( W_NAME, PID, PTR, STRD, CAP)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL3D_DYN

         SUBROUTINE COM_COPY_ARRAY_DBL3D_OFF( W_NAME, PID, PTR, STRD, CAP, OFF)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PID, STRD, CAP, OFF
           DOUBLE PRECISION, POINTER :: PTR(:,:,:)
         END SUBROUTINE COM_COPY_ARRAY_DBL3D_OFF
      END INTERFACE

      INTERFACE COM_GET_BOUNDS
         SUBROUTINE COM_GET_BOUNDS_INT( WNAME, PANE_ID, LBND, UBND)
           CHARACTER(*), INTENT(IN) :: WNAME
           INTEGER, INTENT(IN)      :: PANE_ID
           INTEGER, INTENT(OUT)     :: LBND, UBND
         END SUBROUTINE COM_GET_BOUNDS_INT
         
         SUBROUTINE COM_GET_BOUNDS_FLT( WNAME, PANE_ID, LBND, UBND)
           CHARACTER(*), INTENT(IN) :: WNAME
           INTEGER, INTENT(IN)      :: PANE_ID
           REAL, INTENT(OUT)        :: LBND, UBND
         END SUBROUTINE COM_GET_BOUNDS_FLT
         
         SUBROUTINE COM_GET_BOUNDS_DBL( WNAME, PANE_ID, LBND, UBND)
           CHARACTER(*), INTENT(IN)       :: WNAME
           INTEGER, INTENT(IN)      :: PANE_ID
           DOUBLE PRECISION, INTENT(OUT)  :: LBND, UBND
         END SUBROUTINE COM_GET_BOUNDS_DBL
      END INTERFACE

      INTERFACE COM_USE_ATTRIBUTE
         SUBROUTINE COM_USE_ATTR( WNAME, WANAME)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME
         END SUBROUTINE COM_USE_ATTR
         
         SUBROUTINE COM_USE_ATTR_GHOST( WNAME, WANAME, WITHGHOST)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME
           INTEGER, INTENT(IN) :: WITHGHOST
         END SUBROUTINE COM_USE_ATTR_GHOST

         SUBROUTINE COM_USE_ATTR_SUB( WNAME, WANAME, WITHGHOST, PTNNAME, VAL)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME, PTNNAME
           INTEGER, INTENT(IN) :: VAL, WITHGHOST
         END SUBROUTINE COM_USE_ATTR_SUB
      END INTERFACE

      INTERFACE COM_CLONE_ATTRIBUTE
         SUBROUTINE COM_CLONE_ATTR( WNAME, WANAME)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME
         END SUBROUTINE COM_CLONE_ATTR
         
         SUBROUTINE COM_CLONE_ATTR_GHOST( WNAME, WANAME, WITHGHOST)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME
           INTEGER, INTENT(IN) :: WITHGHOST
         END SUBROUTINE COM_CLONE_ATTR_GHOST

         SUBROUTINE COM_CLONE_ATTR_SUB( WNAME, WANAME, WITHGHOST, PTNNAME, VAL)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME, PTNNAME
           INTEGER, INTENT(IN) :: VAL, WITHGHOST
         END SUBROUTINE COM_CLONE_ATTR_SUB
      END INTERFACE

      INTERFACE COM_COPY_ATTRIBUTE
         SUBROUTINE COM_COPY_ATTR( WNAME, WANAME)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME
         END SUBROUTINE COM_COPY_ATTR
         
         SUBROUTINE COM_COPY_ATTR_GHOST( WNAME, WANAME, WITHGHOST)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME
           INTEGER, INTENT(IN) :: WITHGHOST
         END SUBROUTINE COM_COPY_ATTR_GHOST

         SUBROUTINE COM_COPY_ATTR_SUB( WNAME, WANAME, WITHGHOST, PTNNAME, VAL)
           CHARACTER(*), INTENT(IN) :: WNAME, WANAME, PTNNAME
           INTEGER, INTENT(IN) :: VAL, WITHGHOST
         END SUBROUTINE COM_COPY_ATTR_SUB

         SUBROUTINE COM_COPY_ATTR_HDLS( TRG_HDL, SRC_HDL)
           INTEGER, INTENT(IN) :: TRG_HDL, SRC_HDL
         END SUBROUTINE COM_COPY_ATTR_HDLS
         
         SUBROUTINE COM_COPY_ATTR_GHOST_HDLS( TRG_HDL, SRC_HDL, WG)
           INTEGER, INTENT(IN) :: TRG_HDL, SRC_HDL, WG
         END SUBROUTINE COM_COPY_ATTR_GHOST_HDLS
         
         SUBROUTINE COM_COPY_ATTR_SUB_HDLS( TRG_HDL, SRC_HDL, WG, PNT, VAL)
           INTEGER, INTENT(IN) :: TRG_HDL, SRC_HDL, WG, PNT, VAL
         END SUBROUTINE COM_COPY_ATTR_SUB_HDLS
      END INTERFACE

      INTERFACE COM_DEALLOCATE_ARRAY
         SUBROUTINE COM_DEALLOCATE_WIN( WANAME)
           CHARACTER(*), INTENT(IN) :: WANAME
         END SUBROUTINE COM_DEALLOCATE_WIN

         SUBROUTINE COM_DEALLOCATE_PANE( WANAME, PID)
           CHARACTER(*), INTENT(IN) :: WANAME
           INTEGER, INTENT(IN)      :: PID
         END SUBROUTINE COM_DEALLOCATE_PANE
      END INTERFACE

      INTERFACE COM_GET_SIZE
         SUBROUTINE COM_GET_SIZE1( ANAME, PANE_ID, SIZE_TOTAL)
           CHARACTER(*), INTENT( IN) :: ANAME
           INTEGER, INTENT(IN)       :: PANE_ID
           INTEGER, INTENT(OUT)      :: SIZE_TOTAL
         END SUBROUTINE COM_GET_SIZE1

         SUBROUTINE COM_GET_SIZE2( ANAME, PANE_ID, SIZE_TOTAL, SIZE_GHOST)
           CHARACTER(*), INTENT( IN) :: ANAME
           INTEGER, INTENT(IN)       :: PANE_ID
           INTEGER, INTENT(OUT)      :: SIZE_TOTAL, SIZE_GHOST
         END SUBROUTINE COM_GET_SIZE2
      END INTERFACE

      INTERFACE
         SUBROUTINE COM_GET_ATTRIBUTE( WA_NAME, LOC, TYPE, SIZE, UNIT)
           CHARACTER(*), INTENT(IN) :: WA_NAME
           CHARACTER, INTENT(OUT)   :: LOC
           CHARACTER(*), INTENT(OUT):: UNIT
           INTEGER, INTENT(OUT)     :: TYPE, SIZE
         END SUBROUTINE COM_GET_ATTRIBUTE

         SUBROUTINE COM_SET_FUNCTION( WF_NAME, FUNC, INTENTS, TYPES)
           CHARACTER(*), INTENT(IN) :: WF_NAME, INTENTS
           INTEGER, INTENT(IN) :: TYPES(1)
           EXTERNAL FUNC
         END SUBROUTINE COM_SET_FUNCTION
         
         SUBROUTINE COM_SET_MEMBER_FUNCTION( WF_NAME, FUNC, &
              WA_NAME, INTENTS, TYPES)
           CHARACTER(*), INTENT(IN) :: WF_NAME, WA_NAME, INTENTS
           INTEGER, INTENT(IN) :: TYPES(1)
           EXTERNAL FUNC
         End SUBROUTINE COM_SET_MEMBER_FUNCTION
         
         SUBROUTINE COM_GET_COMMUNICATOR( W_NAME, COMM)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(OUT) :: COMM
         END SUBROUTINE COM_GET_COMMUNICATOR

         SUBROUTINE COM_GET_ATTRIBUTES( W_NAME, NATTS, NAMES)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(INOUT) :: NATTS
           CHARACTER, POINTER :: NAMES(:)
         END SUBROUTINE COM_GET_ATTRIBUTES

         SUBROUTINE COM_GET_CONNECTIVITIES( W_NAME, PANE_ID, NATTS, NAMES)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(IN) :: PANE_ID
           INTEGER, INTENT(INOUT) :: NATTS
           CHARACTER, POINTER :: NAMES(:)
         END SUBROUTINE COM_GET_CONNECTIVITIES

         SUBROUTINE COM_GET_PARENT( WANAME, PANE_ID, NAMES)
           CHARACTER(*), INTENT(IN) :: WANAME
           INTEGER, INTENT(IN) :: PANE_ID
           CHARACTER, POINTER :: NAMES(:)
         END SUBROUTINE COM_GET_PARENT
      END INTERFACE

      INTERFACE COM_GET_PANES
         SUBROUTINE COM_GET_NPANE( W_NAME, NPANES)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(INOUT) :: NPANES
         END SUBROUTINE COM_GET_NPANE

         SUBROUTINE COM_GET_PANE_IDS( W_NAME, NPANES, PANES)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(INOUT) :: NPANES
           INTEGER, POINTER :: PANES(:)
         END SUBROUTINE COM_GET_PANE_IDS

         SUBROUTINE COM_GET_PANE_IDS_ON_RANK( W_NAME, NPANES, PANES, RANK)
           CHARACTER(*), INTENT(IN) :: W_NAME
           INTEGER, INTENT(INOUT) :: NPANES
           INTEGER, INTENT(IN) :: RANK
           INTEGER, POINTER :: PANES(:)
         END SUBROUTINE COM_GET_PANE_IDS_ON_RANK
      END INTERFACE

      INTERFACE COM_FREE_BUFFER
         SUBROUTINE COM_FREE_BUFFER_CHAR( BUF)
           CHARACTER, POINTER :: BUF(:)
         END SUBROUTINE COM_FREE_BUFFER_CHAR

         SUBROUTINE COM_FREE_BUFFER_INT( BUF)
           INTEGER, POINTER :: BUF(:)
         END SUBROUTINE COM_FREE_BUFFER_INT
      END INTERFACE
    
      INTERFACE
         FUNCTION COM_GET_WINDOW_HANDLE( WNAME)
           CHARACTER(*), INTENT(IN) :: WNAME
           INTEGER :: COM_GET_WINDOW_HANDLE
         END FUNCTION COM_GET_WINDOW_HANDLE

         FUNCTION COM_GET_ATTRIBUTE_HANDLE( WANAME)
           CHARACTER(*), INTENT(IN) :: WANAME
           INTEGER :: COM_GET_ATTRIBUTE_HANDLE
         END FUNCTION COM_GET_ATTRIBUTE_HANDLE

         FUNCTION COM_GET_ATTRIBUTE_HANDLE_CONST( WANAME)
           CHARACTER(*), INTENT(IN) :: WANAME
           INTEGER :: COM_GET_ATTRIBUTE_HANDLE_CONST
         END FUNCTION COM_GET_ATTRIBUTE_HANDLE_CONST

         FUNCTION COM_GET_FUNCTION_HANDLE( WFNAME)
           CHARACTER(*), INTENT(IN) :: WFNAME
           INTEGER :: COM_GET_FUNCTION_HANDLE
         END FUNCTION COM_GET_FUNCTION_HANDLE

         FUNCTION COM_GET_STATUS( WANAME, PANEID)
           CHARACTER(*), INTENT(IN) :: WANAME
           INTEGER, INTENT(IN) :: PANEID
           INTEGER :: COM_GET_STATUS
         END FUNCTION COM_GET_STATUS

         SUBROUTINE COM_WAIT( PID)
           INTEGER, INTENT(IN) :: PID
         END SUBROUTINE COM_WAIT
         
         SUBROUTINE COM_TEST( PID, STATUS)
           INTEGER, INTENT(IN) :: PID
           LOGICAL, INTENT(OUT) :: STATUS
         END SUBROUTINE COM_TEST

         SUBROUTINE COM_SET_VERBOSE( level)
           INTEGER, INTENT(IN) :: level
         END SUBROUTINE COM_SET_VERBOSE

         SUBROUTINE COM_SET_DEBUG( debug)
           LOGICAL, INTENT(IN) :: debug
         END SUBROUTINE COM_SET_DEBUG

         SUBROUTINE COM_SET_PROFILING( level)
           INTEGER, INTENT(IN) :: level
         END SUBROUTINE COM_SET_PROFILING

         SUBROUTINE COM_SET_PROFILING_BARRIER( hdl, comm)
           INTEGER, INTENT(IN) :: hdl, comm
         END SUBROUTINE COM_SET_PROFILING_BARRIER

         SUBROUTINE COM_PRINT_PROFILE( fname, header)
           CHARACTER(*), INTENT(IN) :: fname, header
         END SUBROUTINE COM_PRINT_PROFILE

         FUNCTION COM_GET_SIZEOF(TYPE, COUNT)
           INTEGER, INTENT(IN) :: TYPE, COUNT
           INTEGER :: COM_GET_SIZEOF
         END FUNCTION COM_GET_SIZEOF

         FUNCTION COM_GET_SIZEOF_F90POINTER()
           INTEGER :: COM_GET_SIZEOF_F90POINTER
         END FUNCTION COM_GET_SIZEOF_F90POINTER

         FUNCTION COM_GET_ERROR_CODE()
           INTEGER :: COM_GET_ERROR_CODE
         END FUNCTION COM_GET_ERROR_CODE
      END INTERFACE

      INTERFACE ! OBSOLETE
         SUBROUTINE COM_CREATE_WINDOW
         END SUBROUTINE COM_CREATE_WINDOW
  
         SUBROUTINE COM_INIT_MESH
         END SUBROUTINE COM_INIT_MESH
  
         SUBROUTINE COM_INIT_FUNCTION
         END SUBROUTINE COM_INIT_FUNCTION
  
         SUBROUTINE COM_INIT_MEMBER_FUNCTION
         END SUBROUTINE COM_INIT_MEMBER_FUNCTION
  
         SUBROUTINE COM_INIT_PROFILING
         END SUBROUTINE COM_INIT_PROFILING
  
         SUBROUTINE COM_INIT_PROFILING_BARRIER
         END SUBROUTINE COM_INIT_PROFILING_BARRIER
  
         SUBROUTINE COM_USE_MESH
         END SUBROUTINE COM_USE_MESH
  
         SUBROUTINE COM_CLONE_MESH
         END SUBROUTINE COM_CLONE_MESH
  
         SUBROUTINE COM_USE_MESH_SUB
         END SUBROUTINE COM_USE_MESH_SUB
  
         SUBROUTINE COM_CLONE_MESH_SUB
         END SUBROUTINE COM_CLONE_MESH_SUB
  
         SUBROUTINE COM_INIT_ATTRIBUTE
         END SUBROUTINE COM_INIT_ATTRIBUTE
  
         SUBROUTINE COM_INIT_ATTRIBUTE_SRIDED
         END SUBROUTINE COM_INIT_ATTRIBUTE_SRIDED
  
         SUBROUTINE COM_ALLOCATE_ATTRIBUTE
         END SUBROUTINE COM_ALLOCATE_ATTRIBUTE
  
         SUBROUTINE COM_GET_ATTRIBUTE_ADDR
         END SUBROUTINE COM_GET_ATTRIBUTE_ADDR
  
         SUBROUTINE COM_GET_ATTRIBUTE_INFO
         END SUBROUTINE COM_GET_ATTRIBUTE_INFO

         SUBROUTINE COM_GET_WINDOW_PANES
         END SUBROUTINE COM_GET_WINDOW_PANES

         SUBROUTINE COM_GET_WINDOW_NPANES
         END SUBROUTINE COM_GET_WINDOW_NPANES

         SUBROUTINE COM_GET_WINDOW_NNODES
         END SUBROUTINE COM_GET_WINDOW_NNODES

         SUBROUTINE COM_GET_WINDOW_NELEMS
         END SUBROUTINE COM_GET_WINDOW_NELEMS

      END INTERFACE

!!$      ! The following function prototypes must be defined explicitly by 
!!$      ! the application code with specific data types
!!$      INTERFACE 
!!$         SUBROUTINE COM_set_pointer( attr, ptr, asso)
!!$           CHARACTER(*), INTENT(IN) :: attr
!!$           TYPE(...), POINTER :: ptr
!!$           EXTERNAL asso
!!$         END SUBROUTINE COM_set_pointer
!!$
!!$         SUBROUTINE COM_get_pointer( attr, ptr, asso)
!!$           CHARACTER(*), INTENT(IN) :: attr
!!$           TYPE(...), POINTER :: ptr
!!$           EXTERNAL asso
!!$         END SUBROUTINE COM_get_pointer
!!$
!!$         SUBROUTINE COM_set_object( attr, ptr, asso)
!!$           CHARACTER(*), INTENT(IN) :: attr
!!$           TYPE(...), POINTER :: ptr
!!$           EXTERNAL asso
!!$         END SUBROUTINE COM_set_object
!!$
!!$         SUBROUTINE COM_get_object( attr, ptr, asso)
!!$           CHARACTER(*), INTENT(IN) :: attr
!!$           TYPE(...), POINTER :: ptr
!!$           EXTERNAL asso
!!$         END SUBROUTINE COM_get_object
!!$      END INTERFACE

