# for building, path following flags to cmake command
# set -DCMAKE_LIBRARY_PATH=path_to_impact_irad_libraries 
# set -DCMAKE_INCLUDE_PATH=path_to_impact_irad_surfmap_headers 
cmake_minimum_required(VERSION 2.8)
project(OFPrep)
load_cache(../../../)

# Compiled objects output paths
set (EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single directory for all executables.")
set (LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib CACHE PATH "Single directory for all libraries and archives.")
mark_as_advanced (LIBRARY_OUTPUT_PATH EXECUTABLE_OUTPUT_PATH)
# Set up RPATH
SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

INCLUDE(CTest)
IF(BUILD_TESTING)
  SET(BUILDNAME "${BUILDNAME}" CACHE STRING "Name of build on the dashboard")
  MARK_AS_ADVANCED(BUILDNAME)
ENDIF(BUILD_TESTING)

IF(EXISTS ${CMAKE_SOURCE_DIR}/IRAD)
  add_subdirectory(IRAD)
  SET(IRAD_INCPATH ${CMAKE_SOURCE_DIR}/IRAD/include)
  SET(RUNTEST ${EXECUTABLE_OUTPUT_PATH}/bin/runtest)
  SET(TESTRESULT ${EXECUTABLE_OUTPUT_PATH}/bin/testresults)
  SET(IRAD_LIB IRAD)
ELSE()
  FIND_LIBRARY(IRAD_LIB IRAD)
  FIND_FILE(IRAD_HDR COMM.H)
  FIND_PROGRAM(RUNTEST runtest)
  FIND_PROGRAM(TESTRESULT testresults)
  GET_FILENAME_COMPONENT(IRAD_LIBPATH ${IRAD_LIB} PATH)
  GET_FILENAME_COMPONENT(IRAD_INCPATH ${IRAD_HDR} PATH)
  GET_FILENAME_COMPONENT(IRAD_EXEPATH ${RUNTEST} PATH)
ENDIF()
include_directories(${IRAD_INCPATH} include)

FIND_FILE(SURFMAP_HDR Rocmap.h HINTS ${CMAKE_SOURCE_DIR}/IMPACT/SurfMap/include)
GET_FILENAME_COMPONENT(SURFMAP_INCPATH ${SURFMAP_HDR} PATH)
GET_FILENAME_COMPONENT(SolverUtils_INCPATH ${SolverUtils_HDR} PATH)

find_package(MPI)
IF(MPI_CXX_COMPILER)
  set (CMAKE_CXX_COMPILER ${MPI_CXX_COMPILER})
ENDIF()
IF(MPI_CXX_COMPILER)
  ADD_DEFINITIONS(-D_OPENFOAMMODULEDRIVER_PARALLEL_)
ENDIF()

FIND_LIBRARY(IMPACT_LIB SITCOM)
FIND_FILE(IMPACT_HDR comf90.h)
GET_FILENAME_COMPONENT(IMPACT_LIBPATH ${IMPACT_LIB} PATH)
GET_FILENAME_COMPONENT(IMPACT_INCPATH ${IMPACT_HDR} PATH)
include_directories(${IMPACT_INCPATH} ${SURFMAP_INCPATH} ${SolverUtils_INCPATH} include)

add_executable(ofprep src/ofprep.C)
target_link_libraries(ofprep SITCOM SolverUtils ${IRAD_LIB} SimOUT SurfMap)
INSTALL(TARGETS ofprep RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

#ADD_SUBDIRECTORY (testing)
