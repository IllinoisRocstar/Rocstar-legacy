# Makefile for CSAR Rocflo partitioner
# Orion Sky Lawlor, olawlor@acm.org, 6/30/2001

##################################
# System-specific configuration

OPTS            = -O
OSTYPE          = $(shell uname)

#----------------- options for Origin 2000
ifeq "$(OSTYPE)" "IRIX64"
CXX             = CC -64  -mips4 -LANG:std
F90C            = f90 -64
LD              = $(CXX)
FLIBS           = -lfortran -lffio -lftn 
HDFHOME         = /afs/ncsa/packages/hdf/IRIX64_6.5
endif

#----------------- options for turing cluster
ifeq  "$(OSTYPE)" "Linux"
CXX             = g++
F90C            = f90
LD              = $(CXX) 
OPTS           += -DCOM_UPPERCASE=1
FLIBS           = -L/usr/absoft/lib -L/opt/absoft/lib -lU77 -lfio -lf90math -lf77math
HDFHOME         = /csar/software/HDF4.2r0
endif

#----------------- options for Blue horizon
ifeq  "$(OSTYPE)" "AIX"
CXX             = g++
F90C            = xlf90 -qsuffix=f=f90
LDFLAGS         = -bmaxdata:0x70000000 -bmaxstack:0x10000000
FLIBS           = -L/usr/local/gnu/lib/gcc-lib/powerpc-ibm-aix4.3.3.0/2.95.2/ -lstdc++ -lgcc 
LD              = $(F90C) $(LDFLAGS) 
HDFHOME         = /g/g16/rfiedler/HDF
endif

#----------------- options for Blue Pacific
ifeq  "$(OSTYPE)" "PACIFIC"
CXX             = g++
F90C            = xlf90  -qsuffix=f=f90
LDFLAGS         = -bmaxdata:0x70000000 -bmaxstack:0x10000000
FLIBS           = -L/usr/local/gnu/lib/gcc-lib/powerpc-ibm-aix4.3.3.0/2.95.2/ -lstdc++ -lgcc 
LD              = $(F90C) $(LDFLAGS)
HDFHOME         = /g/g16/rfiedler/HDF
endif

#----------------- options for Solaris
ifeq "$(OSTYPE)" "SunOS"
CXX              = CC
#CXX              = g++ -Wall
F90C             = f90
EXTRA           += -DCOM_APPEND_UNDERSCORE
LD               = $(CXX)  
FLIBS            = -lfsu -lsunmath -lfsumai -lfminvai -lfmaxvai -lfui -lfai
HDFHOME          = /home/csar/olawlor/stable/hdf
HDF_EXTRA        = -lnsl
endif


##################################
# Program objects, headers, and executables:

READOBJ=read.o readgrd.o readreg.o readmsh.o readhdf.o
WRITEOBJ=write.o writemsh.o writehdf.o writegrda.o writegrdb.o

UTIL_OBJ=hash_table.o read.a write.a util.o
OBJ= adj.o face.o buildface.o split.o volume.o \
	readinp.o writeflo.o writetop.o writemblock.o \
	$(UTIL_OBJ)
HEADERS=adj.h face.h util.h hash_table.h vector3d.h gridutil.h
DEST=makeflo
RTST= $(UTIL_OBJ)
ATST=read.o $(UTIL_OBJ)

# HDF4 source library:
HDF_INC=$(HDFHOME)/include -DUSE_HDF=1
HDF_LIB=$(HDFHOME)/lib
HDF_LINK=-L$(HDF_LIB)\
	-lmfhdf -ldf -ljpeg -lz $(HDF_EXTRA)

# C++ compiler flags:
CFLAGS= $(EXTRA) -I. -I$(HDF_INC)
CCFLAGS=$(CFLAGS)
LFLAGS= $(HDF_LINK) $(FLIBS) -lm

########################################

all:  $(DEST)

makeflo: makeflo.o  $(OBJ) $(HEADERS)
	$(LD) $(OPTS) $< $(OBJ) -o $@ $(LFLAGS)

makemblock: makemblock.o $(OBJ) $(HEADERS) 
	$(LD) $(OPTS) $< $(OBJ) -o $@ $(LFLAGS)

simpleblock: simpleblock.o $(OBJ)
	$(LD) $(OPTS) $< $(OBJ) -o $@ $(LFLAGS)

printblock: printblock.o $(OBJ)
	$(LD) $(OPTS) $< $(OBJ) -o $@ $(LFLAGS)

read.a: $(READOBJ)
	$(AR) cr $@ $(READOBJ)

write.a: $(WRITEOBJ)
	$(AR) cr $@ $(WRITEOBJ)

.SUFFIXES: .f90 .cpp

.cpp.o:
	$(CXX) $(OPTS) $(CCFLAGS) -c $< -o $@

.f90.o:
	$(F90C) $(OPTS) $(F90FLAGS) -c $< -o $@

# Unit test programs
read.tst: $(RTST) read.cpp
	$(CXX)  $(OPTS) $(CCFLAGS) -DSTANDALONE -c read.cpp 
	$(LD) $(OPTS) read.o $(RTST) -o $@ $(LFLAGS)

adj.tst: $(ATST) adj.cpp
	$(CXX)  $(OPTS) $(CCFLAGS) -DSTANDALONE -c adj.cpp 
	$(LD) $(OPTS) adj.o $(ATST) -o $@ $(LFLAGS)

clean:
	-/bin/rm -fr *.o *.a *~ *.tst makeflo makemblock simpleblock ii_files/ SunWS_cache/
