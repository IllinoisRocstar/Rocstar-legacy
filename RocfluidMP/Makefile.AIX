################################################################################
#
# $Id: Makefile.AIX,v 1.66 2006/04/14 14:03:44 fnajjar Exp $
#
# Purpose: IBM-specific makefile
#
# Description: none
#
# Notes: 
#   1. Note that ARFLAGS is inside the ifeqs. 
#   2. To run 64 bit jobs, you need to set the environment variable 
#      OBJECT_MODE to 64. 
#   3. Because this Makefile is not included when compiling RocfluidMP 
#      inside GENx, you may or may not get 64 bit code...
#
# Copyright: (c) 2002-2005 by the University of Illinois
#
################################################################################

AR= ar
CPP=cpp
LIBMPI=
LIBSYS=
LIBTEC=
MODEXT=mod
MODULES=*.$(MODEXT)
MPIINC= 

### Machine-dependent settings ################################################

MACHINE= $(shell uname -n)



### Blue Horizon ########################
ifeq ($(findstring tf,$(MACHINE)),tf)
  ARFLAGS= cru

  COMP=mpxlf90

  F90DIR:= $(dir $(shell which xlf90))

  CXX=mpxlC
  CXXFLAGS=
  CXXOPT= 
  LINKER=$(CXX)
  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
  FORTFLAGS = -DFORTRAN_LOWERCASE
  FPPFLAGS+= -DNO_TECPLOT
  ifdef DEBUG
    CMFLAGS=-g -C -qlanglvl=90std $(MPIINC)
    LDFLAGS=-g -C -qlanglvl=90std -bmaxdata:0x70000000 $(MPILIB)
  else
    CMFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 $(MPIINC)
    LDFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -bmaxdata:0x70000000 $(MPILIB)
  endif
  ifdef PROF
    CMFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -p $(MPIINC)
    LDFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -bmaxdata:0x70000000 -p
    $(MPILIB)
  endif 
endif


### Datastar ########################
ifeq ($(findstring ds0,$(MACHINE)),ds0)
  ARFLAGS= cru

  CPP=/usr/lib/cpp
  COMP=mpxlf90

  F90DIR:= $(dir $(shell which xlf90))

  CXX=mpCC_r
  CXXFLAGS=
  CXXOPT= 
  LINKER=$(CXX)
  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
  FORTFLAGS = -DFORTRAN_LOWERCASE
  FPPFLAGS+= -DNO_TECPLOT
  ifdef DEBUG
    CMFLAGS=-g -C -qlanglvl=90std $(MPIINC)
    LDFLAGS=-g -C -qlanglvl=90std -bmaxdata:0x70000000 $(MPILIB)
  else
    CMFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 $(MPIINC)
    LDFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 -bmaxdata:0x70000000 $(MPILIB)
  endif
  ifdef PROF
    CMFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 -p $(MPIINC)
    LDFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 -bmaxdata:0x70000000 -p
    $(MPILIB)
  endif 
endif


### Local SPs ########################
ifeq ($(findstring ibmsp,$(MACHINE)),ibmsp)
  ARFLAGS= cru

  COMP=mpxlf90

  F90DIR:= $(dir $(shell which xlf90))

  CXX=mpxlC
  CXXFLAGS=
  CXXOPT= 
  LINKER=$(CXX)
  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
  FORTFLAGS = -DFORTRAN_LOWERCASE

  FPPFLAGS+= -DNO_TECPLOT

  ifdef DEBUG
    CMFLAGS=-g -C -qlanglvl=90std $(MPIINC)
    LDFLAGS=-g -C -qlanglvl=90std -bmaxdata:0x70000000 $(MPILIB)
  else
    CMFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 $(MPIINC)
    LDFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -bmaxdata:0x70000000 $(MPILIB)
  endif
  ifdef PROF
    CMFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -p $(MPIINC)
    LDFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -bmaxdata:0x70000000 -p $(MPILIB)
  endif 
endif




### SP at NCSA ######################
ifeq ($(findstring cu1,$(MACHINE)),cu1)
  F90DIR:= $(dir $(shell which xlf90_r))

  CXX=mpCC_r
  CXXFLAGS=
  CXXOPT= 
  LINKER=$(CXX)
  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
  FORTFLAGS = -DFORTRAN_LOWERCASE

  ifdef PETSC
    FPPFLAGS+= -I$(PETSC_DIR) -I$(PETSC_DIR)/include -I$(PETSC_DIR)/bmake/$(PETSC_ARCH)
    LIBLAP=-L/usr/apps/math/lapack/LAPACK -llapack-SP4_64 -lblas-SP4_64
    LIBPET=-L$(PETSC_DIR)/lib/$(PETSC_ARCH) -lpetscksp -lpetscmat -lpetscvec\
	   -lpetscdm -lpetscfortran -lpetsc -lessl -lpetscsnes
    LIBX11=-L/usr/X11R6/lib -lX11
  endif

  ifeq ($(OBJECT_MODE),64)
    COMP=mpxlf90_r  

    ARFLAGS= -c -r -u -X64

    ifdef DEBUG
      CMFLAGS=-g -C -q64 -qlanglvl=90std -qwarn64 $(MPIINC)
      LDFLAGS=-g -C -b64 -qlanglvl=90std $(MPILIB)
    else
      CMFLAGS=-O3 -q64 -qstrict -qtune=pwr4 -qarch=pwr4 -qwarn64 $(MPIINC)
      LDFLAGS=-O3 -b64 -qstrict -qtune=pwr4 -qarch=pwr4 $(MPILIB)
    endif
    ifdef PROF
      CMFLAGS=-O3 -q64 -qstrict -qtune=pwr4 -qarch=pwr4 -p -qwarn64 $(MPIINC)
      LDFLAGS=-O3 -b64 -qstrict -qtune=pwr4 -qarch=pwr4 -p $(MPILIB)
    endif 

    LIBMET=/usr/apps/math/metis/metis-4.0/libmetis_64.a

    TECHOME=/afs/ncsa/packages/SciViz/VizApps/tecplot/tecplot10_64
    LIBTEC=$(TECHOME)/lib/tecio64.a

    ifdef RFLUPOST
      INCTEC=-I$(TECHOME)/include
    endif 
  else 
    COMP=mpxlf90  
  
    ARFLAGS= cru

    ifdef DEBUG
      CMFLAGS=-g -C -qlanglvl=90std $(MPIINC)
      LDFLAGS=-g -C -qlanglvl=90std $(MPILIB)
    else
      CMFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 $(MPIINC)
      LDFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 $(MPILIB)
    endif
    ifdef PROF
      CMFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 -p $(MPIINC)
      LDFLAGS=-O3 -qstrict -qtune=pwr4 -qarch=pwr4 -p $(MPILIB)
    endif

    LIBMET=/usr/apps/math/metis/metis-4.0/libmetis_32.a

    TECHOME=/afs/ncsa/packages/SciViz/VizApps/tecplot/tecplot10
    LIBTEC=$(TECHOME)/lib/tecio.a

    ifdef RFLUPOST
      INCTEC=-I$(TECHOME)/include
    endif 
  endif
endif




### Frost at LLNL ########################
#
# Frost has gone away - the section has been 
# commented for now because it may be needed
# as a reference when the hardware counters 
# are finally installed on Purple.
#
#ifeq ($(findstring frost,$(MACHINE)),frost)
#  COMP=newmpxlf90
#  F90DIR:= $(dir $(shell which newxlf90_r))
#
#  CXX=mpxlC
#  CXXFLAGS=
#  CXXOPT= 
#  LINKER=$(CXX)
#  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
#  FORTFLAGS = -DFORTRAN_LOWERCASE
#
#  ifeq ($(OBJECT_MODE),64) 
#    ARFLAGS= -c -r -u -X64
#
#    ifdef DEBUG
#      CMFLAGS=-g -C -q64 -qlanglvl=90std -qwarn64 $(MPIINC)
#      LDFLAGS=-g -C -b64 -qlanglvl=90std $(MPILIB)
#    else
#      CMFLAGS=-O3 -q64 -qstrict -qtune=pwr3 -qarch=pwr3 -qwarn64 $(MPIINC)
#      LDFLAGS=-O3 -b64 -qstrict -qtune=pwr3 -qarch=pwr3 $(MPILIB)
#    endif
#    ifdef PROF
#      CMFLAGS=-O3 -q64 -qstrict -qtune=pwr3 -qarch=pwr3 -p -qwarn64 $(MPIINC)
#      LDFLAGS=-O3 -b64 -qstrict -qtune=pwr3 -qarch=pwr3 -p $(MPILIB)
#    endif 
#    ifdef ROCPROF
#      FPPFLAGS+=-DROCPROF
#      LIBSYS+= -brtl -L$(ROCPROF)/lib -L/usr/local/tools/HPM/lib -lRocprof
#    endif
#
#    LIBMET=/usr/local/metis-4.0/64_bit/libmetis.a
#
#    TECHOME=/usr/global/tools/Tecplot/latest/$(SYS_TYPE)
#    LIBTEC=$(TECHOME)/lib/tecio64.a
#
#    ifdef RFLUPOST
#      INCTEC=-I$(TECHOME)/include
#    endif 
#  else
#    ARFLAGS= cru
#
#    ifdef DEBUG
#      CMFLAGS=-g -C -qlanglvl=90std $(MPIINC)
#      LDFLAGS=-g -C -qlanglvl=90std -bmaxdata:0x7000000 $(MPILIB)
#    else
#      CMFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 $(MPIINC)
#      LDFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -bmaxdata:0x7000000 $(MPILIB)
#    endif
#    ifdef PROF
#      CMFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -p $(MPIINC)
#      LDFLAGS=-O3 -qstrict -qtune=pwr3 -qarch=pwr3 -p -bmaxdata:0x7000000 $(MPILIB)
#    endif 
#
#    LIBMET=/usr/local/metis-4.0/32_bit/libmetis.a
#
#    TECHOME=/usr/global/tools/Tecplot/latest/$(SYS_TYPE)
#    LIBTEC=$(TECHOME)/lib/tecio.a
#
#    ifdef RFLUPOST
#      INCTEC=-I$(TECHOME)/include
#    endif 
#  endif
#endif



### Purple at LLNL ########################
ifeq ($(findstring up,$(MACHINE)),up)
  COMP=newmpxlf90
  F90DIR:= $(dir $(shell which newxlf90_r))

  CXX=mpxlC
  CXXFLAGS=
  CXXOPT= 
  LINKER=$(CXX)
  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
  FORTFLAGS = -DFORTRAN_LOWERCASE

  ifeq ($(OBJECT_MODE),64) 
    ARFLAGS= -c -r -u -X64

    ifdef DEBUG
      CMFLAGS=-g -C -q64 -qlanglvl=90std -qwarn64 $(MPIINC)
      LDFLAGS=-g -C -b64 -qlanglvl=90std $(MPILIB)
    else
      ifdef NOSTRICT
        CMFLAGS=-O3 -q64  -qtune=pwr5 -qarch=pwr5 -qwarn64 $(MPIINC)
        LDFLAGS=-O3 -b64  -qtune=pwr5 -qarch=pwr5 $(MPILIB)
      else
        CMFLAGS=-O3 -q64  -qstrict -qtune=pwr5 -qarch=pwr5 -qwarn64 $(MPIINC)
        LDFLAGS=-O3 -b64  -qstrict -qtune=pwr5 -qarch=pwr5 $(MPILIB)
      endif
    endif
    ifdef PROF
      ifdef NOSTRICT
        CMFLAGS=-O3 -q64  -qtune=pwr5 -qarch=pwr5 -p -qwarn64 $(MPIINC)
        LDFLAGS=-O3 -b64  -qtune=pwr5 -qarch=pwr5 -p $(MPILIB)
      else
        CMFLAGS=-O3 -qstrict -q64  -qtune=pwr5 -qarch=pwr5 -p -qwarn64 $(MPIINC)
        LDFLAGS=-O3 -qstrict -b64  -qtune=pwr5 -qarch=pwr5 -p $(MPILIB)
      endif
    endif 
    ifdef ROCPROF
      FPPFLAGS+=-DROCPROF
      LIBSYS+=-brtl -L$(ROCPROF)/lib  -lRocprof
    endif

    LIBMET=/usr/local/metis-4.0/64_bit/libmetis.a
    
    TECHOME=/usr/global/tools/Tecplot/latest/$(SYS_TYPE)
    LIBTEC=$(TECHOME)/lib/tecio64.a

    ifdef RFLUPOST
      INCTEC=-I$(TECHOME)/include
    endif     
  else
    ARFLAGS= cru

    ifdef DEBUG
      CMFLAGS=-g -C -qlanglvl=90std $(MPIINC)
      LDFLAGS=-g -C -qlanglvl=90std -bmaxdata:0x7000000 $(MPILIB)
    else
      ifdef NOSTRICT
        CMFLAGS=-O3 -qtune=pwr5 -qarch=pwr5 $(MPIINC)
        LDFLAGS=-O3 -qtune=pwr5 -qarch=pwr5 -bmaxdata:0x7000000 $(MPILIB)
      else
        CMFLAGS=-O3 -qstrict -qtune=pwr5 -qarch=pwr5 $(MPIINC)
        LDFLAGS=-O3 -qstrict -qtune=pwr5 -qarch=pwr5 -bmaxdata:0x7000000 $(MPILIB)
      endif
    endif
    ifdef PROF
      ifdef NOSTRICT 
        CMFLAGS=-O3 -qtune=pwr5 -qarch=pwr5 -p $(MPIINC)
        LDFLAGS=-O3 -qtune=pwr5 -qarch=pwr5 -p -bmaxdata:0x7000000 $(MPILIB)
      else
        CMFLAGS=-O3 -qtune=pwr5 -qarch=pwr5 -p $(MPIINC)
        LDFLAGS=-O3 -qtune=pwr5 -qarch=pwr5 -p -bmaxdata:0x7000000 $(MPILIB)
      endif
    endif 

    LIBMET=/usr/local/metis-4.0/32_bit/libmetis.a

    TECHOME=/usr/global/tools/Tecplot/latest/$(SYS_TYPE)
    LIBTEC=$(TECHOME)/lib/tecio.a

    ifdef RFLUPOST
      INCTEC=-I$(TECHOME)/include
    endif    
  endif
endif



### Regatta at UMN Supercomputing Institute ####
ifeq ($(MACHINE),regatta)
  ARFLAGS= -c -r -u -X64
	
  COMP=mpxlf90_r

  F90DIR:= $(dir $(shell which xlf90_r))

  CXX= mpCC_r 
  CXXFLAGS=
  CXXOPT= 
  LINKER=$(CXX)
  CXXLINKFLAGS=-L$(F90DIR)../lib -lxlf90_r -lxlopt 
  FORTFLAGS = -DFORTRAN_LOWERCASE

  ifdef DEBUG
    CMFLAGS=-g -C -q64 -qlanglvl=90std -qwarn64 $(MPIINC)
    LDFLAGS=-g -C -b64 -qlanglvl=90std $(MPILIB)
  else
    CMFLAGS=-O3 -q64 -qstrict -qtune=pwr4 -qarch=pwr4 -qwarn64 $(MPIINC)
    LDFLAGS=-O3 -b64 -qstrict -qtune=pwr4 -qarch=pwr4 $(MPILIB)
  endif
  ifdef PROF
    CMFLAGS=-O3 -q64 -qstrict -qtune=pwr4 -qarch=pwr4 -p -qwarn64 $(MPIINC)
    LDFLAGS=-O3 -b64 -qstrict -qtune=pwr4 -qarch=pwr4 -p $(MPILIB)
  endif

  LIBMET = /homes/r52/lagumbay/METIS/metis-4.0/libmetis.a

  TECHOME= /usr/local/tecplot/tecplot10r6
  LIBTEC = $(TECHOME)/lib/tecio64.a

  ifdef RFLUPOST
    INCTEC=-I$(TECHOME)/include
  endif
endif



### Pattern rules ##############################################################
%.o: %.F90
	$(COMP) $(FPPFLAGS:-D%=-WF,-D%) $(CMFLAGS:-D%=-WF,-D%) \
	$(MODDIR:%=-I%) -qsuffix=f=f90:cpp=F90 -qthreaded -c $< -o $@
%.o: %.f
	$(COMP) $(CMFLAGS:-D%=-WF,-D%) -qsuffix=f=f -qfixed -c $< -o $@
%.o: %.C
	$(CXX) $(CXXOPT) -I$(FLUIDHOME)/include $(INCTEC) $(FORTFLAGS) -c $< -o $@

### Default action #############################################################
all:


################################################################################
#
# RCS Revision history:
#
# $Log: Makefile.AIX,v $
# Revision 1.66  2006/04/14 14:03:44  fnajjar
# Updated cpp path for Datastar
#
# Revision 1.65  2006/03/26 20:21:06  haselbac
# Modified regatta section
#
# Revision 1.64  2006/01/30 23:54:01  wasistho
# added datastar
#
# Revision 1.63  2005/12/19 14:28:32  haselbac
# Fixed problem in copper section
#
# Revision 1.62  2005/09/02 14:29:36  mtcampbe
# Updated to support Rocprof's new dynamic library
#
# Revision 1.61  2005/08/02 18:12:23  hdewey2
# Adapted path for PETSc and added snes library
#
# Revision 1.60  2005/07/07 22:42:42  haselbac
# Added PROFILER section to (outdated) Frost section
#
# Revision 1.59  2005/07/05 16:14:34  haselbac
# Fixed bugs in last check-in which broke copper compilation, cosmetics
#
# Revision 1.58  2005/07/01 18:45:30  mtcampbe
# Added support for Purple, and NOSTRICT
#
# Revision 1.55  2005/05/04 13:00:44  haselbac
# Added Tecplot linkage problem workaround
#
# Revision 1.54  2005/05/03 03:01:20  haselbac
# Changed to linking with C++
#
# Revision 1.53  2005/04/15 15:05:40  haselbac
# Removed Charm/FEM stuff and Blue Pacific section
#
# Revision 1.52  2004/12/19 15:42:08  haselbac
# Modified to use PETSc on copper
#
# Revision 1.51  2004/11/09 14:56:24  haselbac
# Modified CHARMHOME and LIBTEC for frost
#
# Revision 1.50  2004/09/15 12:42:21  haselbac
# Removed superfluous NO_TECPLOT preprocessor directive
#
# Revision 1.49  2004/09/15 12:39:07  haselbac
# Enabled use of Tecplot in 64-bit mode on copper
#
# Revision 1.48  2004/08/02 20:49:20  haselbac
# Changed Charm use on Cu12 to allow 32/64 bit builds
#
# Revision 1.47  2004/07/17 21:09:27  haselbac
# Added 32 bit option for Cu12 and enabled Tecplot
#
# Revision 1.46  2004/06/30 00:44:13  haselbac
# Added TECPLOT 10 in 64-bit mode on Frost and Blue Pacific
#
# Revision 1.45  2004/03/30 21:50:00  haselbac
# Added section for Minnesota machine
#
# Revision 1.44  2003/12/04 21:00:39  haselbac
# Changed COMP to newmpxlf90 to avoid module problem
#
# Revision 1.43  2003/12/04 03:19:13  haselbac
# Changed RIFFRAFF and added MODULES
#
# Revision 1.42  2003/05/16 20:39:28  jblazek
# Blue horizon wasn't on the list ...
#
# Revision 1.41  2003/05/13 23:53:47  haselbac
# Added 32/64-bit support for LLNL machines, fixed bugs for blue and Cu12
#
# Revision 1.40  2003/04/28 23:15:18  haselbac
# Fixed COMP variable for NCSA SP
#
# Revision 1.39  2003/04/25 19:42:07  haselbac
# Fixed ARFLAGS problem, added -qwarn64 for every machine
#
# Revision 1.38  2003/04/24 20:03:38  haselbac
# Added 64bit for Frost and Blue, disabled Tecplot for now
#
# Revision 1.37  2003/04/24 18:40:32  haselbac
# Made Cu12 64 bit, added -bmaxdata for DEBUG LDFLAGS
#
# Revision 1.36  2003/04/14 15:31:56  haselbac
# Added tecio.a for Frost and Blue Pacific
#
# Revision 1.35  2003/04/11 15:15:17  jiao
# Changed RFLU_CHARM back to CHARM.
#
# Revision 1.34  2003/04/10 18:23:03  haselbac
# Defined CHARMHOME for frost and blue
#
# Revision 1.33  2003/04/09 22:31:36  haselbac
# Added machine-specific sections
#
# Revision 1.32  2003/03/20 22:41:41  haselbac
# Modifications for new building process
#
# Revision 1.28  2003/01/31 22:59:13  jiao
# Moved MODDIR in build rules
#
# Revision 1.27  2003/01/31 22:19:52  jiao
# Changed to add module paths in CMFLAGS instead of FPPFLAGS
#
# Revision 1.26  2003/01/31 22:11:03  jiao
# Changed to compile modules in modfloflu to avoid duplication of object files.
#
# Revision 1.25  2003/01/30 22:16:39  jiao
# Treat -D options in CMFLAGS
#
# Revision 1.24  2002/11/04 22:13:21  haselbac
# Removed -qextchek for DEBUG=1: Problem on ibmsp-control
#
# Revision 1.23  2002/10/27 18:38:15  haselbac
# Added HACK_SCALED and changed bmaxdata
#
# Revision 1.22  2002/10/25 14:07:56  f-najjar
# Added PLAG_FROZENFLOW cpp flag
#
# Revision 1.21  2002/10/13 21:40:12  jiao
# Compiled Rocflu on IBM SP.
#
# Revision 1.20  2002/10/12 21:37:00  haselbac
# Changed RFLU_CHARM to RFLU_CHARM
#
# Revision 1.19  2002/10/07 17:08:32  olawlor
# Changed "CHARM=1" make flag to "FLU_CHARM=1".
#
# This is needed because the rest of genx uses "CHARM=1"
# to indicate that we're using AMPI; while here "CHARM=1"
# means we're running Rocflu under the FEM framework.
#
# Revision 1.18  2002/10/01 22:40:06  jiao
# Jiao: Fixed dependencies
#
# Revision 1.17  2002/09/27 03:23:01  jblazek
# Corrected problem in qsuffix.
#
# Revision 1.16  2002/09/27 00:57:07  jblazek
# Changed makefiles - no makelinks needed.
#
# Revision 1.15  2002/09/20 22:22:32  jblazek
# Finalized integration into GenX.
#
# Revision 1.14  2002/09/17 22:51:22  jferry
# Removed Fast Eulerian particle type
#
# Revision 1.13  2002/07/25 15:28:47  haselbac
# Added HACK_PERIODIC flag, removed rm *.f because of f77 files in libflu
#
# Revision 1.12  2002/06/27 16:06:14  haselbac
# Added CHECK_DATASTRUCT precompilation flag
#
# Revision 1.11  2002/06/17 13:42:35  haselbac
# Added GENX precompilation flag to activate SOLVER_NAME
#
# Revision 1.10  2002/06/14 21:12:38  haselbac
# Changed UNIFLOWPRES to CHECK_UNIFLOW
#
# Revision 1.9  2002/06/14 20:40:35  wasistho
# Added STATS and CHECK_GRAD flags
#
# Revision 1.8  2002/06/07 16:40:23  jblazek
# Grid & solution for all regions in one file.
#
# Revision 1.7  2002/05/28 13:38:20  haselbac
# Added charmc
#
# Revision 1.6  2002/05/04 17:19:37  haselbac
# Added UNIFLOWPRES command-line flag
#
# Revision 1.5  2002/04/12 16:11:04  f-najjar
# Included bmaxdata flag for large memory usage
#
# Revision 1.4  2002/03/21 21:47:44  jblazek
# Remove *.f after compilation.
#
# Revision 1.3  2002/03/18 22:35:50  jblazek
# Changed compilation options for postprocessing and LAM-MPI.
#
# Revision 1.2  2002/02/21 23:25:04  jblazek
# Blocks renamed as regions.
#
# Revision 1.1  2002/01/17 22:08:31  jblazek
# Added Makefile for AIX (blue horizon).
#
################################################################################

